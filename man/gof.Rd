% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gof.R, R/gof_continuous.R, R/gof_discrete.R
\name{gof}
\alias{gof}
\alias{gof_continuous}
\alias{gof_discrete}
\title{Compute goodness of fit measures}
\usage{
gof(obs, pred, type = c("loglikelihood", "mse", "wmse", "rmse", "sse",
  "wsse", "mape", "mdape", "accuracy"), na.rm = FALSE, ...,
  options = list(), n = NULL)

gof_continuous(obs, pred, type, ...)

gof_discrete(obs, pred, type, ...)
}
\arguments{
\item{obs}{A numeric vector or matrix, the observed data. Can be continuous values or dicrete.  Can be aggregated, and if so you \strong{must} supply \code{n} (see below). The default assumes raw data.}

\item{pred}{A numeric vector or matrix with predictions, in the same order as \code{obs}.}

\item{type}{A string (default \code{"loglikelihood"}) specifying the goodnes-of-fit or error measure, allowed are \code{"sse"} (sum of squared error), \code{"mse"} (mean squared error), \code{"rmse"} (root-mean squared error), \code{"wmse"} (weighted mean squared error), \code{"mape"} (mean absolute percentage error), and \code{"mdape"} (median absolute percentage error), code{"accuracy"} (percent of \code{obs} equal to \code{pred}, after applying an \code{\link{cr_argmax}} choice rule to probabilistic predictions of discrete data).}

\item{na.rm}{(optional) Logical, \code{TRUE} means list-wise removal of \code{NA}, removes all \code{NA} rows found in \code{pred} or \code{obs} jointly.}

\item{...}{arguments from other methods, currently ignored.}

\item{options}{(optional) List with options passed to goodness of fit measures
\describe{
   \item{\code{response}}{String specifying the type of observed data: \code{"discrete"} is choice data, \code{"continuous"} is judgment data.  Can be eabbreviated. If empty, will be guessed  discrete if \code{obs} is a factor or character, will be guessed as continuous if \code{pred} is not in 0-1 i.e not a probability.}
   \item{\code{pdf}}{String, probability density function in log likelihood, allowed values see \code{\link{Loglikelihood}}.}
   \item{\code{saturated}}{Logical, \code{TRUE} returns saturated log likelihood.}
   \item{\code{binomial.coef}}{Logical, \code{TRUE} adds the binomial coefficient to a binomial log likelihood. Mimicks results of dbinom.}
}}

\item{n}{(default: 1) integer or integer vector, number of observations underlying obs; required if \code{obs}, \code{pred} or both are \bold{aggregated}; \code{n=10} means each aggregate represents \code{10} data points, a vector \code{n=c(10,20)} means the first aggregate represents 10, the second 20 data points, etc.}
}
\value{
The goodness of fit.
}
\description{
\code{gof()} is for general goodness of model fits, \code{gof_continuous()} for continuous data, \code{gof_discrete()} for discrete data.
}
\details{
The observations can be discrete or continuous response data. If \code{options = list(response = "discrete")} then \code{obs} can be either a vector with the different choices, or a matrix with as many columns as there are choice options. Each column contains a 0 if not chosen and 1 for chosen.
Predictions can be aggregated or for individual observations. Predictions are individual if \code{n} is not supplied: each \code{pred} predicts the corresponding row in \code{obs} or, if \code{pred} is a single value, this value predicts the mean of \code{obs}.
Predictions are aggregated if \code{n} is supplied: Each value in \code{pred} predicts \code{n} observations. If \code{obs} and \code{pred} are equally long and \code{n} is supplied, then it is assumed that \code{obs} represent the mean predictions across \code{n} values.
}
\examples{
gof(c(.33, .66), c(1,0), "mse")
# Example from Busemeyer and Diederich (2010)
# Observed relative frequencies of binary choices
obs <- c(0.9538, 0.9107, 0.9204, 0.9029, 0.8515, 0.9197,
          0.7970, 0.8228, 0.8191, 0.7277, 0.7276)
# Predictions for each of the 11 conditions
pred <- c(.9526, .9168, .8721, .8229, .7736, .7277,
          .6871, .6523, .6232, .5993, .5798)

\donttest{
#
# GOF from aggregated data over 200 observations
# --------------------------------------------------------------------------
gof_discrete(obs, pred, "sse", n=200)   # SSE  (paper: 0.1695)
gof_discrete(obs, pred, "wsse", n=200)  # Weighted SSE (paper: 158.4059)
gof_discrete(obs, pred, "logl", n=200)  # Loglik. (paper: -969.9514 < 0.1\% diff)
gof_discrete(obs, obs, "loglik", n=200) # Saturated LL (paper: -879.9013)
# 
# GOF from raw data
# --------------------------------------------------------------------------
# Recreate the raw data (observations 0 or 1)
n <- 200 # number of observations
obsraw  <- rep(rep(0:1, 11), round(c(t(cbind(1-obs, obs))) * n))
predraw <- rep(pred, each = n)
gof_discrete(obsraw, predraw, "acc")          # 85\% Accuracy
gof_discrete(obsraw, predraw, "sse")          # SSE (not useful w/ raw data)
gof_discrete(obsraw, predraw, "log")          # Loglik (paper: -969.9514)
gof_discrete(obs, obsraw, "loglik", saturated=TRUE, n=200) # Saturated LL (paper: -879.9013)
}
# Example from Busemeyer and Diederich (2010)
# Observed relative frequencies of binary choices
obs <- c(0.9538, 0.9107, 0.9204, 0.9029, 0.8515, 0.9197,
          0.7970, 0.8228, 0.8191, 0.7277, 0.7276)
# Predictions for each of the 11 conditions
pred <- c(.9526, .9168, .8721, .8229, .7736, .7277,
          .6871, .6523, .6232, .5993, .5798)

\donttest{
#
# GOF from aggregated data over 200 observations
# --------------------------------------------------------------------------
gof_discrete(obs, pred, "sse", n=200)   # SSE  (paper: 0.1695)
gof_discrete(obs, pred, "wsse", n=200)  # Weighted SSE (paper: 158.4059)
gof_discrete(obs, pred, "logl", n=200)  # Loglik. (paper: -969.9514 < 0.1\% diff)
gof_discrete(obs, obs, "loglik", n=200) # Saturated LL (paper: -879.9013)
# 
# GOF from raw data
# --------------------------------------------------------------------------
# Recreate the raw data (observations 0 or 1)
n <- 200 # number of observations
obsraw  <- rep(rep(0:1, 11), round(c(t(cbind(1-obs, obs))) * n))
predraw <- rep(pred, each = n)
gof_discrete(obsraw, predraw, "acc")          # 85\% Accuracy
gof_discrete(obsraw, predraw, "sse")          # SSE (not useful w/ raw data)
gof_discrete(obsraw, predraw, "log")          # Loglik (paper: -969.9514)
gof_discrete(obs, obsraw, "loglik", saturated=TRUE, n=200) # Saturated LL (paper: -879.9013)
}
}
\references{
Busemeyer, J. R., & Diederich, A. (2010). Nonlinear parameter estimation. In Cognitive Modeling (pp. 43â€“84). Thousand Oaks, CAL: SAGE Publications.
}
\seealso{
Other goodness of fit functions: \code{\link{APE}},
  \code{\link{Accuracy}}, \code{\link{MAPE}},
  \code{\link{MDAPE}}, \code{\link{MSE}},
  \code{\link{RMSE}}, \code{\link{SSE}}
}
\concept{goodness of fit functions}
